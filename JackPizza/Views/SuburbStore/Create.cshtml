@model JackPizza.Models.SuburbStore

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Ajax.BeginForm("Create", new AjaxOptions { UpdateTargetId = "textEntered" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SuburbStore</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.suburb, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.suburb, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.suburb, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.store, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.store, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.store, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.postcode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.postcode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.postcode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div id="textEntered">Nothing Entered</div>





<div>
    <div id="map" style="height: 600px"></div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBy31wHgP9tfD10HR1VaEQepWvu1Y_ACbA&libraries=places&callback=initMap" async defer></script>
</div>




<script>
      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var map;
      var infowindow;

      function initMap(  ) {
          
         var pyrmont = { lat: -36.849103, 174.765203 };
        map = new google.maps.Map(document.getElementById('map'), {
          center: pyrmont,
          zoom: 15
        });

        infowindow = new google.maps.InfoWindow();
        var service = new google.maps.places.PlacesService(map);
        service.nearbySearch({
          location: pyrmont,
          radius: 200,
          type: ['domino']
        }, callback);
      }

      function callback(results, status) {
        if (status === google.maps.places.PlacesServiceStatus.OK) {
          for (var i = 0; i < results.length; i++) {
            createMarker(results[i]);
          }
        }
      }

      function createMarker(place) {
        var placeLoc = place.geometry.location;
        var marker = new google.maps.Marker({
          map: map,
          position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
          infowindow.setContent(place.name);
          infowindow.open(map, this);
        });
      }
</script>











<div>
    @Html.ActionLink("Back to List", "Index")
</div>
